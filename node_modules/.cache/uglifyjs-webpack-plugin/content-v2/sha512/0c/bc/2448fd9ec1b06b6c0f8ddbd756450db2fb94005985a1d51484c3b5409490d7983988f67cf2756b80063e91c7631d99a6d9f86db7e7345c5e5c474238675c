{"code":"!function(t){var e={};function o(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},o.r=function(t){Object.defineProperty(t,\"__esModule\",{value:!0})},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,\"a\",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p=\"\",o(o.s=1)}([function(t,e){const o=(t,e)=>t*e;const n=t=>parseFloat(t)/100,i=function(t,e,o){let n=function(t){let e=[];for(let o in t)e.push(o);return e}(t.coins),i=e.toLowerCase();if(!(n.indexOf(`${i}`)>-1))throw`The coin of type '${i}' does not exist. Please use one of the following: ${n}`;\"function\"==typeof o&&o(t,i)};function r(t,e,o){let n=Math.floor(o/e);return 0==n?{remaining:o,coinsSubtracted:0}:{remaining:o-=n*e,coinsSubtracted:n}}let s={coins:{penny:{amount:0,worth:1},nickel:{amount:0,worth:5},dime:{amount:0,worth:10},quarter:{amount:0,worth:25},pound:{amount:0,worth:100}},setCoin:function(t,e){i(this,t,function(t,o){t.coins[o].amount=e})},subtractByCoin:function(t,e){this.coins[t].amount-=e},getAmountByCoin:function(t){let e;return i(this,t,function(t,o){e=t.coins[o].amount}),e},getCalculatedByCoin:function(t){let e=0;return i(this,t,function(t,n){e=o(t.coins[n].amount,t.coins[n].worth)}),e},getTotalRegisterAmount:function(t){let e=0;for(let t in this.coins)e+=this.getCalculatedByCoin(t);if(\"pounds\"==t){return n(e)}return e},removeFromCashregister:function(t,e=\"cents\"){if(\"pounds\"==e&&(t=(t=>100*parseFloat(t))(t)),this.getTotalRegisterAmount()<t)return\"Can't return money since there isn't a sufficient amount in the register.\";console.log(`Log: Going to subtract from the register: ${n(t)} (${t} cents)`);let i=t,s=function(t){let e=[];for(let o in t)e.push([o],t[o]);return e.sort((t,e)=>e[1]-t[1]),e.reverse(),e=function(t){let e=[];for(let o=0;o<t.length;o+=2)e[t[o+1][0]]=t[o];return e}(e)}(this.coins),u=0;for(let t in s){let e=r(s[t].amount,s[t].worth,i);i=e.remaining,this.subtractByCoin(t,e.coinsSubtracted),l=[t],a=e.coinsSubtracted,c=s[t].worth,g=o(e.coinsSubtracted,s[t].worth),console.log(`Log: Coins of type '${l}' substracted: '${a}' of worth '${c}', for a total of '${g}'.`),u+=e.coinsSubtracted*s[t].worth}var l,a,c,g}};s.setCoin(\"penny\",\"12\"),s.setCoin(\"nickel\",\"10\"),s.setCoin(\"dime\",\"2\"),s.setCoin(\"quarter\",\"12\"),s.setCoin(\"pound\",\"30\"),console.dir(`Total directly using the object property Cashregister.coins.penny.amount: ${s.coins.penny.amount}`),console.log(\"---\"),console.log(\"Subtotal amounts before subtraction:\"),console.log(`Total of Pounds using the getter Cashregister.getAmountByCoin('pound'): ${s.getAmountByCoin(\"pound\")}`),console.log(`Total of Nickels using the getter Cashregister.getAmountByCoin('nickel'): ${s.getAmountByCoin(\"nickel\")}`),console.log(`Total of Dimes using the getter Cashregister.getAmountByCoin('dime'): ${s.getAmountByCoin(\"dime\")}`),console.log(`Total of Quaters using the getter Cashregister.getAmountByCoin('quarter'): ${s.getAmountByCoin(\"quarter\")}`),console.log(`Total of Pennies using the getter Cashregister.getAmountByCoin('Penny'): ${s.getAmountByCoin(\"Penny\")}`),console.log(\"---\"),console.log(\"Subtotal amount in cents by coin before subtraction:\"),console.log(`Total of Pounds in cents using the getter Cashregister.getCalculatedByCoin('pound'): ${s.getCalculatedByCoin(\"pound\")}`),console.log(`Total of Nickels in cents using the getter Cashregister.getCalculatedByCoin('nickel'): ${s.getCalculatedByCoin(\"nickel\")}`),console.log(`Total of Dimes in cents using the getter Cashregister.getCalculatedByCoin('dime'): ${s.getCalculatedByCoin(\"dime\")}`),console.log(`Total of Quarters in cents using the getter Cashregister.getCalculatedByCoin('quarter'): ${s.getCalculatedByCoin(\"quarter\")}`),console.log(`Total of Pennies in cents using the getter Cashregister.getCalculatedByCoin('Penny'): ${s.getCalculatedByCoin(\"Penny\")}`),console.log(\"---\"),console.log(\"Total amounts before subtraction:\"),console.log(`Total amount in cents: ${s.getTotalRegisterAmount()}`),console.log(`Total amount in pounds: ${s.getTotalRegisterAmount(\"pounds\")}`),console.log(\"---\"),s.removeFromCashregister(\"20.47\",\"pounds\"),console.log(\"---\"),console.log(`Remaining in the register: ${s.getTotalRegisterAmount(\"pounds\")}`),console.log(\"Subtotal amounts AFTER subtraction:\"),console.log(`Total of Pounds using the getter Cashregister.getAmountByCoin('pound'): ${s.getAmountByCoin(\"pound\")}`),console.log(`Total of Nickels using the getter Cashregister.getAmountByCoin('nickel'): ${s.getAmountByCoin(\"nickel\")}`),console.log(`Total of Dimes using the getter Cashregister.getAmountByCoin('dime'): ${s.getAmountByCoin(\"dime\")}`),console.log(`Total of Quaters using the getter Cashregister.getAmountByCoin('quarter'): ${s.getAmountByCoin(\"quarter\")}`),console.log(`Total of Pennies using the getter Cashregister.getAmountByCoin('Penny'): ${s.getAmountByCoin(\"Penny\")}`)},function(t,e,o){o(0),function(){var t=new Error('Cannot find module \"development\"');throw t.code=\"MODULE_NOT_FOUND\",t}()}]);","extractedComments":[]}